{"version":3,"sources":["index.tsx"],"names":["notAvailableError","Platform","OS","UnavailableFn","Error","Healthkit","authorizationStatusFor","buildUnitWithPrefix","disableAllBackgroundDelivery","disableBackgroundDelivery","enableBackgroundDelivery","getBiologicalSex","getBloodType","getDateOfBirth","getFitzpatrickSkinType","getMostRecentCategorySample","getMostRecentQuantitySample","getMostRecentWorkout","getPreferredUnit","getPreferredUnits","getRequestStatusForAuthorization","getWheelchairUse","isHealthDataAvailable","Promise","resolve","queryCategorySamples","queryCorrelationSamples","queryQuantitySamples","queryStatisticsForQuantity","queryWorkouts","requestAuthorization","saveCategorySample","saveCorrelationSample","saveQuantitySample","saveWorkoutSample","subscribeToChanges","useMostRecentCategorySample","useMostRecentQuantitySample","useMostRecentWorkout","useSubscribeToChanges"],"mappings":";;;;;;;;AAAA;;AA+CA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA7CA,MAAMA,iBAAiB,GACrB,eACAC,sBAASC,EADT,GAEA,sFAHF;;AAKA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAM,IAAIC,KAAJ,CAAUJ,iBAAV,CAAN;AACD,CAFD;;AAIA,MAAMK,SAA+B,GAAG;AACtCC,EAAAA,sBAAsB,EAAEH,aADc;AAEtCI,EAAAA,mBAAmB,EAAEJ,aAFiB;AAGtCK,EAAAA,4BAA4B,EAAEL,aAHQ;AAItCM,EAAAA,yBAAyB,EAAEN,aAJW;AAKtCO,EAAAA,wBAAwB,EAAEP,aALY;AAMtCQ,EAAAA,gBAAgB,EAAER,aANoB;AAOtCS,EAAAA,YAAY,EAAET,aAPwB;AAQtCU,EAAAA,cAAc,EAAEV,aARsB;AAStCW,EAAAA,sBAAsB,EAAEX,aATc;AAUtCY,EAAAA,2BAA2B,EAAEZ,aAVS;AAWtCa,EAAAA,2BAA2B,EAAEb,aAXS;AAYtCc,EAAAA,oBAAoB,EAAEd,aAZgB;AAatCe,EAAAA,gBAAgB,EAAEf,aAboB;AActCgB,EAAAA,iBAAiB,EAAEhB,aAdmB;AAetCiB,EAAAA,gCAAgC,EAAEjB,aAfI;AAgBtCkB,EAAAA,gBAAgB,EAAElB,aAhBoB;AAiBtCmB,EAAAA,qBAAqB,EAAE,MAAMC,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAjBS;AAkBtCC,EAAAA,oBAAoB,EAAEtB,aAlBgB;AAmBtCuB,EAAAA,uBAAuB,EAAEvB,aAnBa;AAoBtCwB,EAAAA,oBAAoB,EAAExB,aApBgB;AAqBtCyB,EAAAA,0BAA0B,EAAEzB,aArBU;AAsBtC0B,EAAAA,aAAa,EAAE1B,aAtBuB;AAuBtC2B,EAAAA,oBAAoB,EAAE3B,aAvBgB;AAwBtC4B,EAAAA,kBAAkB,EAAE5B,aAxBkB;AAyBtC6B,EAAAA,qBAAqB,EAAE7B,aAzBe;AA0BtC8B,EAAAA,kBAAkB,EAAE9B,aA1BkB;AA2BtC+B,EAAAA,iBAAiB,EAAE/B,aA3BmB;AA4BtCgC,EAAAA,kBAAkB,EAAEhC,aA5BkB;AA6BtCiC,EAAAA,2BAA2B,EAAEjC,aA7BS;AA8BtCkC,EAAAA,2BAA2B,EAAElC,aA9BS;AA+BtCmC,EAAAA,oBAAoB,EAAEnC,aA/BgB;AAgCtCoC,EAAAA,qBAAqB,EAAEpC;AAhCe,CAAxC;eAsCeE,S","sourcesContent":["import { Platform } from 'react-native';\nimport type { ReactNativeHealthkit } from './types';\n\nconst notAvailableError =\n  'Platform \"' +\n  Platform.OS +\n  '\" not supported, use isHealthDataAvailable to check for availability before using it';\n\nconst UnavailableFn = () => {\n  throw new Error(notAvailableError);\n};\n\nconst Healthkit: ReactNativeHealthkit = {\n  authorizationStatusFor: UnavailableFn,\n  buildUnitWithPrefix: UnavailableFn,\n  disableAllBackgroundDelivery: UnavailableFn,\n  disableBackgroundDelivery: UnavailableFn,\n  enableBackgroundDelivery: UnavailableFn,\n  getBiologicalSex: UnavailableFn,\n  getBloodType: UnavailableFn,\n  getDateOfBirth: UnavailableFn,\n  getFitzpatrickSkinType: UnavailableFn,\n  getMostRecentCategorySample: UnavailableFn,\n  getMostRecentQuantitySample: UnavailableFn,\n  getMostRecentWorkout: UnavailableFn,\n  getPreferredUnit: UnavailableFn,\n  getPreferredUnits: UnavailableFn,\n  getRequestStatusForAuthorization: UnavailableFn,\n  getWheelchairUse: UnavailableFn,\n  isHealthDataAvailable: () => Promise.resolve(false),\n  queryCategorySamples: UnavailableFn,\n  queryCorrelationSamples: UnavailableFn,\n  queryQuantitySamples: UnavailableFn,\n  queryStatisticsForQuantity: UnavailableFn,\n  queryWorkouts: UnavailableFn,\n  requestAuthorization: UnavailableFn,\n  saveCategorySample: UnavailableFn,\n  saveCorrelationSample: UnavailableFn,\n  saveQuantitySample: UnavailableFn,\n  saveWorkoutSample: UnavailableFn,\n  subscribeToChanges: UnavailableFn,\n  useMostRecentCategorySample: UnavailableFn,\n  useMostRecentQuantitySample: UnavailableFn,\n  useMostRecentWorkout: UnavailableFn,\n  useSubscribeToChanges: UnavailableFn,\n};\n\nexport * from './types';\nexport * from './native-types';\n\nexport default Healthkit;\n"]}